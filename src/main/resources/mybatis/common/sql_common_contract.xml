<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.ichain.luigi2.mapper.CommonContractMapper">
	<select id="selectContracts" resultType="ContractsVo" parameterType="hashmap">
		SELECT
			tenant_id,
			contract_no,
			contract_branch_no
		FROM
			contracts
		WHERE
			tenant_id = #{tenantId}
			AND contract_no = #{contractNo}
			<![CDATA[AND FROM_UNIXTIME(#{baseDate}/1000) between issue_date and expiration_date]]>
			<![CDATA[AND (termination_date is null OR FROM_UNIXTIME(#{baseDate}/1000) <= termination_date)]]>
	</select>
	<select id="selectBenefit" resultType="RiskHeadersVo" parameterType="hashmap">
		SELECT
			r.risk_sequence_no,
			r.benefit_code,
			r.benefit_text,
			r.payment_code,
			r.payment_text,
			r.benefit_base_amount,
			r.benefit_base_unit
		FROM
			risk_headers r
		INNER JOIN contracts ct
			ON r.tenant_id = ct.tenant_id
			AND r.contract_no = ct.contract_no
			AND r.contract_branch_no = ct.contract_branch_no
		WHERE
			ct.tenant_id = #{tenantId}
			AND ct.contract_no = #{contractNo}
			AND FROM_UNIXTIME(#{baseDate}/1000) between r.risk_start_date and r.risk_end_date
		ORDER BY risk_sequence_no ASC
	</select>
	<select id="selectInsured" resultType="ClaimCustomerVo" parameterType="hashmap">
		SELECT 
		    contracts.id AS contractId,
		    CASE
		        WHEN (claim_headers.claimant_sei_knj IS NOT NULL) THEN claim_headers.claimant_sei_knj
		        ELSE CASE
		            WHEN customers.corporate_individual_flag = '1' THEN customers_individual.name_knj_sei
		            WHEN customers.corporate_individual_flag = '2' THEN customers_corporate.rep10e_name_knj_sei
		            ELSE NULL
		        END
		    END AS name_knj_sei,
		    CASE
		        WHEN (claim_headers.claimant_mei_knj IS NOT NULL) THEN claim_headers.claimant_mei_knj
		        ELSE CASE
		            WHEN customers.corporate_individual_flag = '1' THEN customers_individual.name_knj_mei
		            WHEN customers.corporate_individual_flag = '2' THEN customers_corporate.rep10e_name_knj_mei
		            ELSE NULL
		        END
		    END AS name_knj_mei,
		    CASE
		        WHEN (claim_headers.claimant_sei_kana IS NOT NULL) THEN claim_headers.claimant_sei_kana
		        ELSE CASE
		            WHEN customers.corporate_individual_flag = '1' THEN customers_individual.name_kana_sei
		            WHEN customers.corporate_individual_flag = '2' THEN customers_corporate.rep10e_name_kana_sei
		            ELSE NULL
		        END
		    END AS name_kana_sei,
		    CASE
		        WHEN (claim_headers.claimant_sei_kana IS NOT NULL) THEN claim_headers.claimant_mei_kana
		        ELSE CASE
		            WHEN customers.corporate_individual_flag = '1' THEN customers_individual.name_kana_mei
		            WHEN customers.corporate_individual_flag = '2' THEN customers_corporate.rep10e_name_kana_mei
		            ELSE NULL
		        END
		    END AS name_kana_mei,
		    CASE
		        WHEN (claim_headers.claimant_date_of_birth IS NOT NULL) THEN claim_headers.claimant_date_of_birth
		        ELSE CASE
		            WHEN customers.corporate_individual_flag = '1' THEN customers_individual.date_of_birth
		            WHEN customers.corporate_individual_flag = '2' THEN customers_corporate.rep10e_date_of_birth
		            ELSE NULL
		        END
		    END AS date_of_birth,
		    CASE
		        WHEN (claim_headers.claimant_address IS NOT NULL) THEN claim_headers.claimant_address
		        ELSE CASE
		            WHEN
		                customers.corporate_individual_flag = '1'
		            THEN
		                CONCAT(customers_individual.addr_knj_pref,
		                        customers_individual.addr_knj_1,
		                        customers_individual.addr_knj_2)
		            WHEN
		                customers.corporate_individual_flag = '2'
		            THEN
		                CONCAT(customers_corporate.rep10e_addr_knj_pref,
		                        customers_corporate.rep10e_addr_knj_1,
		                        customers_corporate.rep10e_addr_knj_2)
		            ELSE NULL
		        END
		    END AS address,
		    CASE
		        WHEN (claim_headers.tel_no IS NOT NULL) THEN claim_headers.tel_no
		        ELSE CASE
		            WHEN customers.corporate_individual_flag = '1' THEN customers_individual.addr_tel1
		            WHEN customers.corporate_individual_flag = '2' THEN customers_corporate.rep10e_addr_tel1
		            ELSE NULL
		        END
		    END AS tel_no,
		    claim_headers.contact_tel_no,
		    CASE
		        WHEN (claim_headers.email IS NOT NULL) THEN claim_headers.email
		        ELSE CASE
		            WHEN customers.corporate_individual_flag = '1' THEN customers_individual.email
		            WHEN customers.corporate_individual_flag = '2' THEN customers_corporate.contact_email
		            ELSE NULL
		        END
		    END AS email
		FROM
		    contracts
		        LEFT OUTER JOIN
		    claim_headers ON contracts.tenant_id = claim_headers.tenant_id
		        AND contracts.contract_no = claim_headers.contract_no
		        AND contracts.contract_branch_no = claim_headers.contract_branch_no
		        INNER JOIN
		    customers ON contracts.contractor_customer_id = customers.customer_id
		        AND contracts.tenant_id = customers.tenant_id
		        LEFT OUTER JOIN
		    customers_individual ON contracts.contractor_customer_id = customers_individual.customer_id
		        AND contracts.tenant_id = customers_individual.tenant_id
		        AND customers.corporate_individual_flag = '1'
		        LEFT OUTER JOIN
		    customers_corporate ON contracts.contractor_customer_id = customers_corporate.customer_id
		        AND contracts.tenant_id = customers_corporate.tenant_id
		        AND customers.corporate_individual_flag = '2'
		WHERE
			contracts.tenant_id = #{tenantId}
			AND contracts.contract_no = #{contractNo}
			AND contracts.contract_branch_no = #{contractBranchNo}
		LIMIT 1
	</select>
	<select id="selectBeneficiaries" resultType="ClaimCustomerVo" parameterType="hashmap">
		SELECT 
		    contracts.id as contractId,
		    beneficiaries.name_knj_sei,
		    beneficiaries.name_knj_mei,
		    beneficiaries.name_kana_sei,
		    beneficiaries.name_kana_mei,
		    beneficiaries.date_of_birth,
		    CONCAT(beneficiaries.addr_knj_pref,
		            beneficiaries.addr_knj_1,
		            beneficiaries.addr_knj_2) AS address
		FROM
		    beneficiaries
		        INNER JOIN
		    contracts ON beneficiaries.contract_no = contracts.contract_no
		        AND beneficiaries.contract_branch_no = contracts.contract_branch_no
		        AND beneficiaries.tenant_id = contracts.tenant_id
		WHERE
			beneficiaries.tenant_id = #{tenantId}
			AND beneficiaries.contract_no = #{contractNo}
			AND beneficiaries.contract_branch_no = #{contractBranchNo}
			<![CDATA[AND FROM_UNIXTIME(#{baseDate}/1000) between beneficiaries.start_date and beneficiaries.end_date]]>
	</select>
	
</mapper>
