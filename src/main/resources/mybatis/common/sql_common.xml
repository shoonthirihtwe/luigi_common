<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.ichain.luigi2.mapper.CommonMapper">
	<select id="pessimisticLockKey" parameterType="map"  resultType="int">
		SELECT ${tableInfo.key} FROM ${tableInfo.table} WHERE
		tenant_id=#{tenantId} AND ${tableInfo.key} <![CDATA[ > ]]>
		(SELECT ${tableInfo.key} FROM ${tableInfo.table} WHERE
		tenant_id=#{tenantId} ORDER BY ${tableInfo.key} DESC LIMIT 1)
		FOR UPDATE
	</select>

	<select id="selectIncrementNumber" parameterType="map"
		resultType="string">
		SELECT
		LPAD(IFNULL(max(${tableInfo.key}),0)+1,#{tableInfo.size},'0')
		FROM ${tableInfo.table} WHERE tenant_id=#{tenantId}
	</select>
	
	<select id="selectIsExistKey" parameterType="map" resultType="boolean">
		SELECT 1 FROM ${tableInfo.table} WHERE
		tenant_id=#{tenantId} AND ${tableInfo.key}=#{data}
	</select>

	<select id="selectServiceInstances" parameterType="map"
		resultType="ServiceInstancesVo">
		SELECT * from service_instances WHERE status='1'
		<if test="updatedAt != null">AND CASE WHEN updated_at is null THEN created_at ELSE updated_at END > #{updatedAt}</if>
		ORDER BY updated_at DESC
	</select>
	
	<select id="selectCodeMaster" parameterType="map"
		resultType="CodeMasterVo">
		SELECT 
			tenant_id as tenantId,
			CONCAT(tbl,'-',field) as tbl,
			code_value as codeValue,
			code_name as codeName,
			updated_at as updatedAt,
			created_at as createdAt
		FROM code_master 
		<if test="updatedAt != null">WHERE CASE WHEN updated_at is null THEN created_at ELSE updated_at END > #{updatedAt}</if>
		ORDER BY updated_at DESC
	</select>

	<select id="selectLastUpdatedAt" parameterType="map" resultType="java.util.Date">
		SELECT
		max(updated_at) from ${table}
	</select>
	
	<select id="selectTenants" parameterType="TenantsVo" resultType="TenantsVo">
		SELECT
			*
		FROM
			tenants
		<where>
			<if test="updatedAt != null">AND CASE WHEN updated_at is null THEN created_at ELSE updated_at END > #{updatedAt}</if>
		</where>
		ORDER BY updated_at DESC
	</select>
	<select id="getBatchDate" resultType="TenantsVo" parameterType="hashmap">
		SELECT 
			id, batch_date
		FROM
			tenants
		WHERE
			id IN 
			<foreach item="tenantId" collection="tenantIds" separator="," open="(" close=")">
		        #{tenantId}
		    </foreach>
	</select>
	<select id="selectFactoringCompanyCode" resultType="string" parameterType="hashmap">
		SELECT factoring_company_code
		FROM factoring_companies
		WHERE deleted_at is null AND 
			factoring_company_start_date <![CDATA[<= now() AND now() <= factoring_company_end_date]]> AND
			factoring_company_code = (
			SELECT 
			factoring_company_code
			FROM policy_holders_pay_method
			WHERE tenant_id=1 AND contract_no=#{contractNo} AND start_date <![CDATA[<= now() AND now() <= end_date]]> AND status = 'A')
	</select>
	<select id="selectOpenDate" resultType="Date" parameterType="hashmap">
		SELECT
			date
		FROM
			calendars
		WHERE
			tenant_id = #{tenantId}
			AND date > #{date}
			AND holiday_flag = 0
		ORDER BY
			date ASC
		LIMIT #{count},1
	</select>
	<insert id="insertNotification" parameterType="NotificationsVo" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO notifications (
			tenant_id,
			notification_date,
			contract_no,
			contract_branch_no,
			template_nunber,
		    <if test="notificationImplementation != null">notification_implementation,</if>
		    <if test="coment != null">coment,</if>
		    sendee,
		    nitification_method,
		    email,
		  	created_by
		)
		VALUES (
			#{tenantId},
			#{notificationDate},
			#{contractNo},
			#{contractBranchNo},
			#{templateNunber},
			
			<if test="notificationImplementation != null">#{notificationImplementation},</if>
			<if test="coment != null">#{coment},</if>
			
			#{sendee},
			#{nitificationMethod},
			#{email},
			#{createdBy}
		)
	</insert>
</mapper>
